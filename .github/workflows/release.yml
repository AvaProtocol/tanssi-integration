name: CI

on: ["pull_request"]

jobs:
  set-tags:
    runs-on: ubuntu-latest
    outputs:
      polkadot_release: ${{ steps.get-sha.outputs.polkadot_release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.sha }}
      - name: Get polkadot release tag
        id: get-polkadot-release-tag
        run:
          echo "polkadot_repo=$(egrep -o 'https.*/polkadot' Cargo.lock | head -1)" >> $GITHUB_OUTPUT

          echo $GITHUB_OUTPUT
      - name: Display variables
        run: |
          echo polkadot_release: ${{ steps.get_polkadot_release_tag.outputs.polkadot_release }}
  ####### Building and Testing binaries #######
  build:
    runs-on: self-hosted
    env:
      RUSTFLAGS: "-C opt-level=3 -D warnings"
      TMP_TARGET: "/tmp/target"
      CARGO_TARGET_DIR: "target"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        run: rustup show

      - name: Formatter
        run: cargo fmt --all --check

      - name: Build
        run: cargo build --release --all

      - name: Test
        run: cargo test --release --all

      - name: Save runtime wasm
        run: |
          mkdir -p runtimes
          cp $CARGO_TARGET_DIR/release/wbuild/container-chain-template-simple-runtime/container_chain_template_simple_runtime.compact.wasm runtimes/;
          cp $CARGO_TARGET_DIR/release/wbuild/test-runtime/test_runtime.compact.compressed.wasm runtimes/;

      - name: Upload runtimes
        uses: actions/upload-artifact@v3.1.2
        with:
          name: runtimes
          path: runtimes

      - name: Save tanssi and template binaries
        run: |
          mkdir -p binaries
          cp $CARGO_TARGET_DIR/release/test-node binaries/test-node;
          cp $CARGO_TARGET_DIR/release/container-chain-template-simple-node binaries/container-chain-template-simple-node;

      - name: Upload binary
        uses: actions/upload-artifact@v3.1.2
        with:
          name: binaries
          path: binaries
      
  typescript-tests:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.sha }}
        
      - name: Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
        
      - name: Node  
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "pnpm"
          cache-dependency-path: test/pnpm-lock.yaml

      - name: "Download binaries"
        uses: actions/download-artifact@v3.0.2
        with:
          name: binaries
          path: target/release
      
      - name: "Install and run upgrade test"
        run: |
          chmod uog+x target/release/test-node
          cd test
          pnpm i
          pnpm moonwall test dev_tanssi

  zombienet-tests:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.sha }}

      - name: Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
        
      - name: Node  
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "pnpm"
          cache-dependency-path: test/pnpm-lock.yaml

      - name: "Download binaries"
        uses: actions/download-artifact@v3.0.2
        with:
          name: binaries
          path: test/tmp
      
      - name: Retrieve polkadot binary from docker
        run: |
          DOCKER_TAG="parity/polkadot:latest"
          docker rm -f dummy 2> /dev/null | true
          docker create -ti --name dummy $DOCKER_TAG bash
          docker cp dummy:/usr/bin/polkadot test/tmp/polkadot
          docker rm -f dummy
      
      - name: "Run zombie test"
        run: |
          cd test
          pnpm i

          chmod uog+x tmp/test-node
          chmod uog+x tmp/container-chain-template-simple-node
          chmod uog+x tmp/polkadot

          ## Generate specs
          tmp/container-chain-template-simple-node build-spec --parachain-id 2000 --seeds "Collator2000-01,Collator2000-02" --raw --> tmp/template-container-2000.json
          tmp/container-chain-template-simple-node build-spec --parachain-id 2001 --seeds "Collator2001-01,Collator2001-02" --raw --> tmp/template-container-2001.json

          ## Run tests

          pnpm moonwall test zombie_tanssi_ci