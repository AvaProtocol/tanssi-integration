[package]
name = "tanssi-worker"
authors = { workspace = true }
description = "Polkadot crate that implements the PVF validation host. Responsible for coordinating preparation and execution of PVFs."
edition = "2021"
license = "GPL-3.0-only"
version = "0.1.0"

[lints]
workspace = true

[dependencies]
always-assert = { workspace = true }
array-bytes = { workspace = true }
blake3 = { workspace = true }
cfg-if = { workspace = true }
futures = { workspace = true }
futures-timer = { workspace = true }
tracing-gum = { workspace = true }
is_executable = { workspace = true }
libc = { workspace = true }
os_pipe = { workspace = true }
pin-project = { workspace = true }
rand = { workspace = true }
slotmap = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["fs", "process"] }

parity-scale-codec = { workspace = true, features = ["derive"] }

polkadot-parachain-primitives = { workspace = true }
polkadot-core-primitives = { workspace = true }
tanssi-worker-ancillary = { workspace = true }
tanssi-worker-common = { workspace = true }
polkadot-node-metrics = { workspace = true }
polkadot-node-primitives = { workspace = true }
polkadot-node-subsystem = { workspace = true }
polkadot-primitives = { workspace = true }

sp-core = { workspace = true }
sp-wasm-interface = { workspace = true }
sp-maybe-compressed-blob = { workspace = true }
#polkadot-node-core-pvf-prepare-worker = { workspace = true, optional = true }
#polkadot-node-core-pvf-execute-worker = { workspace = true, optional = true }
tanssi-core-execute-worker = { workspace = true, optional = true }

[dev-dependencies]
assert_matches = { workspace = true }
criterion = { workspace = true, default-features = false, features = ["async_tokio", "cargo_bench_support"] }
hex-literal = { workspace = true }

tanssi-worker-common = { workspace = true, features = ["test-utils"] }
# For benches and integration tests, depend on ourselves with the test-utils
# feature.
tanssi-worker = { path = ".", features = ["test-utils"] }
rococo-runtime = { workspace = true }

#adder = { package = "test-parachain-adder", path = "../../../parachain/test-parachains/adder" }
#halt = { package = "test-parachain-halt", path = "../../../parachain/test-parachains/halt" }

# TODO: turn these into workspace deps:
[target.'cfg(target_os = "linux")'.dev-dependencies]
procfs = "0.16.0"
rusty-fork = "0.3.0"
sc-sysinfo = { workspace = true }

[[bench]]
name = "host_prepare_rococo_runtime"
harness = false

[features]
ci-only-tests = []
jemalloc-allocator = ["tanssi-worker-common/jemalloc-allocator"]
# This feature is used to export test code to other crates without putting it in the production build.
test-utils = [
	"tanssi-core-execute-worker",
]
